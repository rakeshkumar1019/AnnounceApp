currentBuild.displayName="Community-Announcement-Portal-#"+currentBuild.number
pipeline {
    agent any
     tools {
       maven 'maven'
     }
     environment {
      DOCKER_TAG = getDockerTag()
     }

    stages {
        stage('Git Checkout') {
            steps {
               git credentialsId: 'git_credential', url: 'https://github.com/rakeshkumar1019/java-jsp-diary.git'
            }
        }
        
        stage('Maven Build') {
            steps {
                sh "mvn clean package"
                sh "mv target/*.war target/myweb.war"
            }
        }
        
        stage('Deploy') {
           steps {
               sshagent(['tomcat-new']) {
                   sh """
                      scp -o StrictHostKeyChecking=no target/myweb.war ec2-user@3.110.127.18:/opt/tomcat/webapps/
                      ssh ec2-user@3.110.127.18 /opt/tomcat/bin/shutdown.sh
                      ssh ec2-user@3.110.127.18 /opt/tomcat/bin/startup.sh
                   """
               }
             }
        }
        
        stage('Build Docker Image') {
            steps {
                sh """
                   docker build . -t rakesh1019/javahome:${DOCKER_TAG}
                """
            }
        }
        
         stage('DockerHub Push Image') {
            steps {
                 withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerHubPwd')]) {
                      sh "docker login -u rakesh1019 -p ${dockerHubPwd}"
                      sh "docker push rakesh1019/javahome:${DOCKER_TAG}"
                 }
            }
        }
        
          stage('Deploy to k8s') {
            steps {
                 sh "chmod +x changeTag.sh"
                 sh "./changeTag.sh ${DOCKER_TAG}"
                  sshagent(['kops-master']) {
                     sh "scp -o StrictHostKeyChecking=no services.yml java-app-pod.yml centos@13.127.176.63:/home/centos/"
                     script{
                           try{
                               sh """
                                   ssh root@13.127.176.63 kubectl apply -f .
                               """      
                           }catch(error){
                               sh """
                                   ssh root@13.127.176.63 kubectl create -f .
                                """      
                           }
                     }
                     
                  }
            }
        }
        
        
      
        
    }
}

def getDockerTag(){
     def tag = sh script: 'git rev-parse HEAD', returnStdout: true
     return tag
}




