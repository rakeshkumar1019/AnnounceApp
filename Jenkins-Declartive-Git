currentBuild.displayName="Community-Announcement-Portal-#"+currentBuild.number
pipeline {
    agent any
     tools {
       maven 'maven'
     }
     environment {
      DOCKER_TAG = getDockerTag()
     }

    stages {
        stage('Git Checkout') {
            steps {
               git credentialsId: 'git_credential', url: 'https://github.com/rakeshkumar1019/java-jsp-diary.git'
            }
        }
        
        stage('Maven Build') {
            steps {
                sh "mvn clean package"
                sh "mv target/*.war target/myweb.war"
            }
        }
        
        stage('Deploy') {
           steps {
               sshagent(['tomcat-new']) {
                   sh """
                      scp -o StrictHostKeyChecking=no target/myweb.war ec2-user@15.206.75.71:/opt/tomcat/webapps/
                      ssh ec2-user@15.206.75.71 /opt/tomcat/bin/shutdown.sh
                      ssh ec2-user@15.206.75.71 /opt/tomcat/bin/startup.sh
                   """
               }
             }
        }
        
        stage('Build Docker Image') {
            steps {
                sh "docker build . -t rakesh1019/javaapp:${DOCKER_TAG}"
            }
        }
        
        
    }
}

def getDockerTag(){
     def tag = sh script: 'git rev-parse HEAD', returnStdout: true
     return tag
}




